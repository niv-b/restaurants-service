name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        id: lint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        id: tests
        run: pytest

      - name: Workflow Summary
        if: always()
        run: |
          echo "### Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ ${{ steps.lint.outcome }} == 'success' ]]; then
            echo "- ✅ **Linting Passed**" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ **Linting Failed**" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ ${{ steps.tests.outcome }} == 'success' ]]; then
            echo "- ✅ **All Tests Passed**" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ **Some Tests Failed**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Detailed Logs:**" >> $GITHUB_STEP_SUMMARY
          echo "- [View Linting Logs](#lint-with-flake8)" >> $GITHUB_STEP_SUMMARY
          echo "- [View Test Logs](#test-with-pytest)" >> $GITHUB_STEP_SUMMARY
